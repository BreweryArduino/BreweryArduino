/*
  DigOut - Библиотека для более удобного объявления у управления цифровыми выходами
  A. Taranov yul-i-an@mail.ru" 05.2016
*/
Например в программе необходимо упровлять реле которое подключено к цифровому выходу 11
Теперь вместо

#define relay 11; //пин реле
void setup()
{
pinMode(relay,OUTPUT);//установить вывод реле как выход
digitalWrite(relay,LOW);//установить низкий уровень на выходе
}
void loop()
{
digitalWrite(relay,HIGH);//включить реле
delay (1000);//пауза
digitalWrite(relay,LOW);//выключить реле
}

можно просто писать
#include <DigOut.h>
DigOut relay(11,0);//инициализация реле на 11 цифровом выходе в выключеном состоянии
void setup(){}
void loop()
{
relay.HI();//включить реле
delay (1000);//пауза
relay.LO();//выключить реле
}

/*варианты описания класса
DigOut x; - с параметрами по умолчанию (имя экземпляра x, 13 пин по умолчанию, состояние LOW по умолчанию)

DigOut x(myPin); - (имя экземпляра x, пин myPin, состояние LOW по умолчанию)

DigOut x(myPin, 1); - (имя экземпляра x, пин myPin, состояние HIGH задано)*/

8.05.16 - добавлены функции blink()
	blink(ms,ms)- позволяет задать на выход период и продолжительность импульсов
22.06.16 - добавлена функция lpwm () - аналог функции blink(), но в отличие от неё вместо продолжительности
	импульса задается процент заполнения (0-100%);	
28.06.16 - убрана функция blink(), теперь вместо нё необходимо использовать lpwm(period,fill,pwm_mode)
	pwm_mode - если 0 то в качестве fill принимает милисикунды, если не указывать или установить 1, то принимает 
	процент заполнения шим 0-100%